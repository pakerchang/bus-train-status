{"version":3,"sources":["apiKey.js","page/Taichung/Bus.js","requests.js","index.js"],"names":["getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","Authorization","getHMAC","Bus","useState","cityInput","routeInput","setRouteInput","originInput","setOriginInput","destinationInput","setDestinationInput","data","setData","operator","setOperator","outputData","setOutputData","fetchData","a","reqURL","operatorURL","axios","get","headers","then","res","catch","err","console","log","useEffect","findStation","map","item","Stops","stopsArray","index","result","TimeTables","timeArray","routeName","RouteName","Zh_tw","stopID","StopID","stationName","StopName","endStation","DestinationStopName","departTime","ArrivalTime","order","id","OperatorID","departStation","find","match","includes","destinationStation","tmp","filter","matchOperatorName","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","alert","undefined","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","departItem","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99fad9a6.chunk.js","sourcesContent":["import jsSHA from \"jssha\";\n\nconst getAuthorizationHeader = function () {\n\tconst apiID = \"e076b2463e674e1e95cf5fd189f15b00\";\n\tconst apiKey = \"nL1Irz7_VltcPMn6JTT7VyW-yWI\";\n\n\tvar GMTString = new Date().toGMTString();\n\tvar ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n\tShaObj.setHMACKey(apiKey, \"TEXT\");\n\tShaObj.update(\"x-date: \" + GMTString);\n\tvar HMAC = ShaObj.getHMAC(\"B64\");\n\tvar Authorization =\n\t\t'hmac username=\"' +\n\t\tapiID +\n\t\t'\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n\t\tHMAC +\n\t\t'\"';\n\n\treturn {\n\t\tAuthorization: Authorization,\n\t\t\"X-Date\": GMTString,\n\t};\n};\n\nexport default getAuthorizationHeader;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport \"./Bus.css\";\nimport { busOperator, taichungBus } from \"../../requests\";\nimport getAuthorizationHeader from \"../../apiKey\";\nimport axios from \"axios\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n} from \"@material-ui/core\";\n\nfunction Bus() {\n\tconst [cityInput, setCityInput] = useState(\"Taichung\");\n\tconst [routeInput, setRouteInput] = useState(\"綠1\");\n\tconst [originInput, setOriginInput] =\n\t\tuseState(\"北新國中\");\n\tconst [destinationInput, setDestinationInput] =\n\t\tuseState(\"中山國中\");\n\tconst [data, setData] = useState([]);\n\tconst [operator, setOperator] = useState([]);\n\tconst [outputData, setOutputData] = useState();\n\n\tconst fetchData = async () => {\n\t\tconst reqURL = taichungBus(routeInput);\n\t\tconst operatorURL = busOperator(cityInput);\n\t\tawait axios\n\t\t\t.get(reqURL, { headers: getAuthorizationHeader() })\n\t\t\t.then((res) => {\n\t\t\t\t// console.log(\"raw:\", res.data);\n\t\t\t\tsetData(res.data);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\tawait axios\n\t\t\t.get(operatorURL, {\n\t\t\t\theaders: getAuthorizationHeader(),\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"operatorData: \", res.data);\n\t\t\t\tsetOperator(res.data);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst searchBtn = (e) => {\n\t\te.preventDefault();\n\t\tif (\n\t\t\trouteInput &&\n\t\t\toriginInput &&\n\t\t\tdestinationInput !== \"\"\n\t\t) {\n\t\t\tfetchData();\n\t\t} else {\n\t\t\talert(\"請輸入站別或路線\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\t// rename Object\n\t\tconst station = data.map((item) => {\n\t\t\t// 解 Stops Array\n\t\t\treturn item.Stops.map((stopsArray, index) => {\n\t\t\t\tconst result = stopsArray.TimeTables.map(\n\t\t\t\t\t(timeArray) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trouteName: item.RouteName.Zh_tw,\n\t\t\t\t\t\t\tstopID: stopsArray.StopID,\n\t\t\t\t\t\t\tstationName: stopsArray.StopName.Zh_tw,\n\t\t\t\t\t\t\tendStation: item.DestinationStopName.Zh_tw,\n\t\t\t\t\t\t\tdepartTime: timeArray.ArrivalTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\torder: index,\n\t\t\t\t\tid: item.OperatorID,\n\t\t\t\t\tstationName: stopsArray.StopName.Zh_tw,\n\t\t\t\t\tresult,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t\t// console.log(\"station: \", station);\n\n\t\t// pick operator name\n\t\tconst matchOperatorName = () => {\n\t\t\tconst tmp = operator.filter((item) => {\n\t\t\t\treturn item.OperatorID === \"19\";\n\t\t\t});\n\t\t\tconsole.log(\"matchOperatorName: \", tmp);\n\t\t\treturn tmp;\n\t\t};\n\t\t// console.log(\"operatorName: \", matchOperatorName);\n\t\t//挑出起迄站\n\t\tconst findStation = station.map((item) => {\n\t\t\tconst departStation = item.find((match) =>\n\t\t\t\toriginInput.includes(match.stationName)\n\t\t\t);\n\t\t\tconst destinationStation = item.find((match) =>\n\t\t\t\tdestinationInput.includes(match.stationName)\n\t\t\t);\n\t\t\treturn { departStation, destinationStation };\n\t\t});\n\t\t// console.log(\"findstation: \", findStation);\n\t\tmatchOperatorName(findStation.id);\n\n\t\tsetOutputData(\n\t\t\tfindStation.find((item) => {\n\t\t\t\treturn (\n\t\t\t\t\titem.departStation.order <\n\t\t\t\t\titem.destinationStation.order\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}, [data, setOutputData]);\n\tconsole.log(\"output: \", outputData);\n\n\treturn (\n\t\t<div className=\"bus\">\n\t\t\t<h1>台中公車時刻表查詢</h1>\n\t\t\t<form className=\"bus__searchForm\">\n\t\t\t\t<div className=\"bus__searchContainer\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"bus__routeName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder={\"路線\"}\n\t\t\t\t\t\tvalue={routeInput}\n\t\t\t\t\t\tonChange={(e) => setRouteInput(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"bus__origin\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"出發站\"\n\t\t\t\t\t\tvalue={originInput}\n\t\t\t\t\t\tonChange={(e) => setOriginInput(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"bus__destination\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"抵達站\"\n\t\t\t\t\t\tvalue={destinationInput}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetDestinationInput(e.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"bus__searchBtn\"\n\t\t\t\t\t\tonClick={searchBtn}>\n\t\t\t\t\t\tGo\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{outputData === undefined ? (\n\t\t\t\t\t\t//防止頁面載入時提前render\n\t\t\t\t\t\t<h3 className=\"bus__userTips\">\n\t\t\t\t\t\t\t因功能未完善，請完整輸入站牌及路線名稱，ex:\n\t\t\t\t\t\t\t路線：14副2 、 站牌名： 四張犁(昌平路)\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t<Table aria-label=\"collapsible table\">\n\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t路線\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t{/* <TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t客運\n\t\t\t\t\t\t\t\t\t\t</TableCell> */}\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t起點站\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t發車時間\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t目的地\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t抵達時間\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t終點站\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{outputData.departStation.result.map(\n\t\t\t\t\t\t\t\t\t\t// 利用departStation idex 連帶將 destinationStation 的資料一同 map 出來\n\t\t\t\t\t\t\t\t\t\t(departItem, idx) => (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{departItem.routeName}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t客運\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{departItem.stationName}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{departItem.departTime}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toutputData.destinationStation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.result[idx].stationName\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toutputData.destinationStation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.result[idx].departTime\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toutputData.destinationStation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.result[idx].endStation\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Bus;\n","const trainAPI = (originStation, destination, date) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/DailyTrainTimetable/OD/${originStation}/to/${destination}/${date}?$format=JSON`;\n};\n\nconst busAPI = (positionLat, positionLon) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/NearBy?$select=PlateNumb%2CStopID%2CStopName%2CRouteID%2C%20RouteName%2C%20SubRouteID%2C%20SubRouteName%2C%20Direction%2C%20EstimateTime%2C%20StopStatus%2C%20NextBusTime&$spatialFilter=nearby(${positionLat},${positionLon},500)&$format=JSON`;\n};\n\nconst taichungBus = (routeName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/DailyStopTimeTable/City/Taichung/${routeName}?$format=JSON`;\n};\n\nconst busOperator = (cityName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/Operator/City/${cityName}?$select=OperatorID%2COperatorName&$format=JSON`;\n};\n\nexport { trainAPI, busAPI, taichungBus, busOperator };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./page/Home/Home.js\";\nimport \"./index.css\";\nimport Bus from \"./page/Taichung/Bus.js\";\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t{/* <Home /> */}\n\t\t<Bus />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}