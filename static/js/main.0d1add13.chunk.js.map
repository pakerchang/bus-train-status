{"version":3,"sources":["requests.js","apiKey.js","page/Home/Home.js","BackToTop.js","Components/TrainLiveStation.js","index.js"],"names":["trainAPI","originStation","destination","date","trainLiveStation","stationID","getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","Authorization","getHMAC","ScrollTop","scrollTarget","classes","useStyles","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","e","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","backToTopRoot","CustomTrainIcon","props","color","other","Train","trainIcon","makeStyles","theme","home","textAlign","backgroundColor","height","overflowY","flexGrow","marginTop","menuButton","marginRight","spacing","title","appBar","marginBottom","progressRoot","display","alignItems","progressWrapper","margin","position","fabProgress","green","top","left","zIndex","buttonSuccess","trainInput","flexDirection","tableRoot","borderRadius","padding","tableHeadCell","fontSize","fontFamily","tableCell","textDiv","console","log","bottom","right","footer","justifyContent","root","justifyItems","paddingTop","form","width","table","maxWidth","ReactDOM","render","StrictMode","basename","process","path","component","useState","rawData","setRawData","outputData","setOutputData","fetchData","a","url","axios","get","headers","then","res","data","RailLiveBoard","stationClick","station","alert","useEffect","length","map","item","stationName","direction","Direction","trainType","TrainTypeName","arrivalTime","ScheduledArrivalTime","departTime","ScheduleDepartTime","delayTime","DelayTime","Button","variant","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","scope","trainTypeName","trainOriginInput","setTrainOriginInput","trainDestinationInput","setTrainDestinationInput","format","loading","setLoading","success","setSuccess","buttonClassName","clsx","React","anchorEl","setAnchorEl","menuClose","location","href","endStation","reqURL","TrainTimetables","catch","error","trainID","TrainInfo","TrainNo","trainTypeCode","TrainTypeCode","originStationName","StartingStationName","Zh_tw","endStationName","EndingStationName","departure","StopTimes","DepartureTime","arrival","ArrivalTime","sort","first","second","localeCompare","AppBar","Toolbar","Typography","IconButton","edge","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","GitHub","style","marginLeft","EmailRounded","AccountCircleRounded","Autocomplete","autoSelect","autoComplete","autoHighlight","value","onChange","newValue","options","stationInfo","option","StationName","renderInput","params","TextField","label","Fab","startStation","find","includes","StationID","Search","ArrowRightAlt","CircularProgress","size","id","key","replace","Email","KeyboardArrowUp","getElementById"],"mappings":"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","file":"static/js/main.0d1add13.chunk.js","sourcesContent":["const trainAPI = (originStation, destination, date) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/DailyTrainTimetable/OD/${originStation}/to/${destination}/${date}?$format=JSON`;\n};\n\nconst trainLiveStation = (stationID) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Rail/TRA/LiveBoard/Station/${stationID}?$format=JSON\n`;\n};\n\nconst busAPI = (positionLat, positionLon) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/NearBy?$select=PlateNumb%2CStopID%2CStopName%2CRouteID%2C%20RouteName%2C%20SubRouteID%2C%20SubRouteName%2C%20Direction%2C%20EstimateTime%2C%20StopStatus%2C%20NextBusTime&$spatialFilter=nearby(${positionLat},${positionLon},500)&$format=JSON`;\n};\n\nconst taichungBus = (routeName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/DailyStopTimeTable/City/Taichung/${routeName}?$format=JSON`;\n};\n\nconst busOperator = (cityName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/Operator/City/${cityName}?$select=OperatorID%2COperatorName&$format=JSON`;\n};\n\nexport { trainAPI, trainLiveStation, busAPI, taichungBus, busOperator };\n","import jsSHA from \"jssha\";\n\nconst getAuthorizationHeader = function () {\n\tconst apiID = \"e076b2463e674e1e95cf5fd189f15b00\";\n\tconst apiKey = \"nL1Irz7_VltcPMn6JTT7VyW-yWI\";\n\n\tvar GMTString = new Date().toGMTString();\n\tvar ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n\tShaObj.setHMACKey(apiKey, \"TEXT\");\n\tShaObj.update(\"x-date: \" + GMTString);\n\tvar HMAC = ShaObj.getHMAC(\"B64\");\n\tvar Authorization =\n\t\t'hmac username=\"' +\n\t\tapiID +\n\t\t'\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n\t\tHMAC +\n\t\t'\"';\n\n\treturn {\n\t\tAuthorization: Authorization,\n\t\t\"X-Date\": GMTString,\n\t};\n};\n\nexport default getAuthorizationHeader;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\n// files\nimport stationInfo from \"../../json/stationInfo.json\";\n//date\nimport { format } from \"date-fns\";\n// component\n// import BusList from \"../../Components/BusList\";\n// import TrainList from \"../../Components/TrainList\";\n// train list component\nimport axios from \"axios\";\nimport { trainAPI } from \"../../requests\";\nimport getAuthorizationHeader from \"../../apiKey\";\n// material-ui\nimport {\n\tTableContainer,\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tFab,\n\tmakeStyles,\n\tuseScrollTrigger,\n\tZoom,\n\tCircularProgress,\n\tAppBar,\n\tToolbar,\n\tTypography,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n} from \"@material-ui/core\";\nimport {\n\tSearch,\n\tArrowRightAlt,\n\tTrain,\n\tKeyboardArrowUp,\n\tGitHub,\n\tEmailRounded,\n\tAccountCircleRounded,\n\tEmail,\n} from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport PropTypes from \"prop-types\";\n\nexport default function Home(scrollTarget) {\n\t// Train input\n\tconst [trainOriginInput, setTrainOriginInput] = useState(null);\n\tconst [trainDestinationInput, setTrainDestinationInput] = useState(null);\n\t// Bus input\n\t// const [city, setCity] = useState(\"\");\n\t// const [busRoute, setBusRoute] = useState(\"藍幹線\");\n\tconst classes = useStyles();\n\t// 抓取當地時間\n\tconst date = format(new Date(), \"yyyy-MM-dd\");\n\t// Progress Component\n\tconst [loading, setLoading] = useState(false);\n\tconst [success, setSuccess] = useState(true);\n\t//train list component\n\tconst [rawData, setRawData] = useState([]);\n\tconst [outputData, setOutputData] = useState();\n\tconst buttonClassName = clsx({\n\t\t[classes.buttonSuccess]: success,\n\t});\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst menuClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\tconst menuClose = (props) => {\n\t\tswitch (props) {\n\t\t\tcase \"github\":\n\t\t\t\twindow.location.href = \"https://github.com/pakerchang\";\n\t\t\t\tsetAnchorEl(null);\n\t\t\t\tbreak;\n\t\t\tcase \"sourceCode\":\n\t\t\t\twindow.location.href = \"https://github.com/pakerchang/bus-train-status\";\n\t\t\t\tsetAnchorEl(null);\n\t\t\t\tbreak;\n\t\t\tcase \"mail\":\n\t\t\t\twindow.location.href = \"mailto:pakerchang.project@gmail.com\";\n\t\t\tdefault:\n\t\t\t\tsetAnchorEl(null);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst fetchData = async (originStation, endStation) => {\n\t\tconst reqURL = trainAPI(originStation, endStation, date);\n\t\tawait axios\n\t\t\t.get(reqURL, {\n\t\t\t\theaders: getAuthorizationHeader(),\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"raw: \", res.data);\n\t\t\t\tsetRawData(res.data.TrainTimetables);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\tconst searchBtn = () => {\n\t\tif (\n\t\t\t!loading &&\n\t\t\ttrainOriginInput !== null &&\n\t\t\ttrainDestinationInput !== null &&\n\t\t\ttrainOriginInput !== trainDestinationInput\n\t\t) {\n\t\t\t// fabProgress Component animation start\n\t\t\tsetSuccess(false);\n\t\t\tsetLoading(true);\n\t\t\t// 將車站名轉換成車站編號\n\t\t\tconst startStation = stationInfo.find((item) => trainOriginInput.includes(item.StationName.Zh_tw));\n\t\t\t// 將車站名轉換成車站編號\n\t\t\tconst endStation = stationInfo.find((item) => trainDestinationInput.includes(item.StationName.Zh_tw));\n\t\t\tfetchData(startStation.StationID, endStation.StationID);\n\t\t} else {\n\t\t\talert(\"請輸入或確認站別\");\n\t\t}\n\t};\n\n\t// input icon controller\n\tuseEffect(() => {\n\t\tif (trainOriginInput !== null && trainDestinationInput !== null) {\n\t\t\tsetSuccess(true);\n\t\t} else {\n\t\t\tsetSuccess(false);\n\t\t}\n\t}, [trainDestinationInput, trainOriginInput]);\n\n\t// train list component\n\tuseEffect(() => {\n\t\tif (rawData.length !== 0) {\n\t\t\tconst station = rawData.map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\ttrainID: item.TrainInfo.TrainNo,\n\t\t\t\t\ttrainTypeCode: item.TrainInfo.TrainTypeCode,\n\t\t\t\t\toriginStationName: item.TrainInfo.StartingStationName.Zh_tw,\n\t\t\t\t\tendStationName: item.TrainInfo.EndingStationName.Zh_tw,\n\t\t\t\t\ttrainType: item.TrainInfo.TrainTypeName.Zh_tw,\n\t\t\t\t\tdirection: item.TrainInfo.Direction,\n\t\t\t\t\tdeparture: item.StopTimes[0].DepartureTime,\n\t\t\t\t\tarrival: item.StopTimes[1].ArrivalTime,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetOutputData(\n\t\t\t\tstation.sort((first, second) => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetSuccess(false);\n\t\t\t\t\treturn first.departure.localeCompare(second.departure);\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tsetLoading(false);\n\t\t\tsetSuccess(false);\n\t\t}\n\t}, [rawData]);\n\t// console.log(\"output: \", outputData);\n\n\treturn (\n\t\t<div className={classes.home}>\n\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t火車時刻表查詢\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={menuClick}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={menuClose}>\n\t\t\t\t\t\t<MenuItem onClick={(e) => menuClose(\"github\")}>\n\t\t\t\t\t\t\t<GitHub /> <span style={{ marginLeft: 10 }}>Github</span>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={(e) => menuClose(\"sourceCode\")}>\n\t\t\t\t\t\t\t<GitHub /> <span style={{ marginLeft: 10 }}>Source Code</span>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={(e) => menuClose(\"mail\")}>\n\t\t\t\t\t\t\t<EmailRounded /> <span style={{ marginLeft: 10 }}>Contact</span>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem>\n\t\t\t\t\t\t\t<AccountCircleRounded />\n\t\t\t\t\t\t\t<span style={{ marginLeft: 10 }}>Login</span>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t<form className={classes.trainInput}>\n\t\t\t\t<div className={classes.progressRoot}>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tautoSelect\n\t\t\t\t\t\tautoComplete\n\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\tvalue={trainOriginInput}\n\t\t\t\t\t\tonChange={(e, newValue) => {\n\t\t\t\t\t\t\tsetTrainOriginInput(newValue);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toptions={stationInfo.map((option) => option.StationName.Zh_tw)}\n\t\t\t\t\t\tstyle={{ width: 170, padding: \"0px 25px\" }}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"出發站\" variant=\"outlined\" />}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={classes.progressWrapper}>\n\t\t\t\t\t\t<Fab aria-label=\"search\" color=\"primary\" className={buttonClassName} onClick={searchBtn}>\n\t\t\t\t\t\t\t{success ? <Search /> : <ArrowRightAlt />}\n\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t{loading && <CircularProgress size={68} className={classes.fabProgress} />}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tautoSelect\n\t\t\t\t\t\tautoComplete\n\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\tvalue={trainDestinationInput}\n\t\t\t\t\t\tonChange={(e, newValue) => {\n\t\t\t\t\t\t\tsetTrainDestinationInput(newValue);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toptions={stationInfo.map((option) => option.StationName.Zh_tw)}\n\t\t\t\t\t\tstyle={{ width: 170, padding: \"0px 25px\" }}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"終點站\" variant=\"outlined\" />}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"trainList\">\n\t\t\t\t\t{outputData === undefined || rawData.length === 0 ? (\n\t\t\t\t\t\t<h3>無資料</h3>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t<Table className={classes.tableRoot}>\n\t\t\t\t\t\t\t\t<TableHead id=\"back-to-top-anchor\">\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeadCell}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.textDiv} style={{ marginLeft: 15 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t車種車次 (始發站 <ArrowRightAlt /> 終點站)\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeadCell}>車次</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeadCell}>出發時間</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeadCell}>抵達時間</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeadCell}>行駛方向</TableCell>\n\t\t\t\t\t\t\t\t\t\t{/* <TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t行駛時間\n\t\t\t\t\t\t\t\t\t\t\t</TableCell> */}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{outputData.map((item) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow key={item.trainID}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableCell}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.textDiv}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomTrainIcon color={item.trainTypeCode} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.trainType.replace(/\\([^()]*\\)/g, \"\")} ({item.originStationName} <ArrowRightAlt />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.endStationName})\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableCell}>{item.trainID}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableCell}>{item.departure}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableCell}>{item.arrival}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableCell}>{item.direction === 1 ? \"南下\" : \"北上\"}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<div className={classes.footer}>\n\t\t\t\t<IconButton onClick={(e) => menuClose(\"sourceCode\")}>\n\t\t\t\t\t<GitHub />\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton onClick={(e) => menuClose(\"mail\")}>\n\t\t\t\t\t<Email />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t\t<ScrollTop {...scrollTarget}>\n\t\t\t\t<Fab color=\"primary\" size=\"large\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUp />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t{/* <div className=\"home__searchBus\">\n\t\t\t\t\t\t<h2>公車時刻表</h2> */}\n\t\t\t{/* select option */}\n\t\t\t{/* <input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"縣市\"\n\t\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"路線\"\n\t\t\t\t\t\t\tonChange={(e) => setBusRoute(e.target.value)}\n\t\t\t\t\t\t/> */}\n\t\t\t{/* 顯示公車時刻表單 */}\n\t\t\t{/* <BusList\n\t\t\t\t\t\t\t// city={searchInfo.city}\n\t\t\t\t\t\t\tpositionLat={searchInfo.positionLat}\n\t\t\t\t\t\t\tpositionLon={searchInfo.positionLon}\n\t\t\t\t\t\t\tbusRoute={searchInfo.busRoute}\n\t\t\t\t\t\t/> */}\n\t\t\t{/* </div> */}\n\t\t</div>\n\t);\n}\n\nconst ScrollTop = (scrollTarget) => {\n\tconst classes = useStyles();\n\tconst { children, window } = scrollTarget;\n\tconst trigger = useScrollTrigger({\n\t\ttarget: window ? window() : undefined,\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\t// console.log(\"trigger: \", trigger);\n\tconst handleClick = (e) => {\n\t\tconst anchor = (e.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\treturn (\n\t\t<Zoom in={!trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.backToTopRoot}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n};\nScrollTop.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\twindow: PropTypes.func,\n};\n\nconst CustomTrainIcon = (props) => {\n\tconst { color, ...other } = props;\n\tconst classes = useStyles(props);\n\treturn <Train className={classes.trainIcon} {...other} />;\n};\n\nconst useStyles = makeStyles((theme) => ({\n\thome: {\n\t\ttextAlign: \"center\",\n\t\tbackgroundColor: \"#dadbd3\",\n\t\theight: \"100vh\",\n\t\toverflowY: \"scroll\",\n\t\tflexGrow: 1,\n\t\t\"& h3\": {\n\t\t\tmarginTop: \"50px\",\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tappBar: {\n\t\tmarginBottom: \"40px\",\n\t},\n\tprogressRoot: {\n\t\tmarginTop: \"90px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\tprogressWrapper: {\n\t\tmargin: theme.spacing(1),\n\t\tposition: \"relative\",\n\t},\n\tfabProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: -6,\n\t\tleft: -6,\n\t\tzIndex: 1,\n\t},\n\tbuttonSuccess: {\n\t\tbackgroundColor: \"primary\",\n\t},\n\ttrainInput: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tflexDirection: \"column\",\n\t},\n\ttableRoot: {\n\t\tbackgroundColor: \"#A9A9A9\",\n\t\tmarginTop: \"35px\",\n\t\tborderRadius: \"15px\",\n\t\tpadding: \"25px 35px\",\n\t},\n\ttableHeadCell: {\n\t\ttextAlign: \"center\",\n\t\tfontSize: \"16px\",\n\t\tpadding: \"20px 20px\",\n\t\tfontFamily: [\"Saira Condensed\", \"sans-serif\"],\n\t},\n\ttableCell: {\n\t\tbackgroundColor: \"#fff\",\n\t\ttextAlign: \"center\",\n\t\tpadding: \"20px 30px\",\n\t\tfontSize: \"18px\",\n\t\tfontFamily: [\"Saira Condensed\", \"sans-serif\"],\n\t},\n\ttextDiv: {\n\t\tdisplay: \"flex\",\n\t},\n\ttrainIcon: {\n\t\tcolor: (props) => {\n\t\t\tswitch (props.color) {\n\t\t\t\tcase \"1\":\n\t\t\t\t\treturn \"#ff5000\";\n\n\t\t\t\tcase \"2\":\n\t\t\t\t\treturn \"#d00216\";\n\n\t\t\t\tcase \"3\":\n\t\t\t\t\treturn \"#ff8708\";\n\n\t\t\t\tcase \"4\":\n\t\t\t\t\treturn \"#ffd200\";\n\n\t\t\t\tcase \"5\":\n\t\t\t\t\treturn \"#00ace8\";\n\n\t\t\t\tcase \"6\":\n\t\t\t\t\treturn \"#0072B5\";\n\n\t\t\t\tcase \"7\":\n\t\t\t\t\treturn \"#a9a9a9\";\n\n\t\t\t\tcase \"10\":\n\t\t\t\t\treturn \"#00bfff\";\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn console.log(\"SwitchColor Identify Error\");\n\t\t\t}\n\t\t},\n\t\tmarginRight: 10,\n\t},\n\tbackToTopRoot: {\n\t\tposition: \"fixed\",\n\t\tbottom: theme.spacing(3),\n\t\tright: theme.spacing(3),\n\t},\n\tfooter: { display: \"flex\", justifyContent: \"center\", margin: 40 },\n}));\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles((theme) => ({\n\tbackToTopRoot: {\n\t\tposition: \"fixed\",\n\t\tbottom: theme.spacing(2),\n\t\tright: theme.spacing(2),\n\t},\n}));\n\nfunction ScrollTop(props) {\n\tconst { children, window } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\ttarget: window ? window() : undefined,\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\tconsole.log(\"trigger: \", trigger);\n\tconst handleClick = (event) => {\n\t\tconst anchor = (event.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.backToTopRoot}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nScrollTop.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\twindow: PropTypes.func,\n};\n\nexport default function BackToTop(props) {\n\tconst [showResults, setShowResults] = React.useState(false);\n\tconst ontClick = () => setShowResults(true);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div id=\"back-to-top-anchor\" />\n\t\t\t<input type=\"submit\" value=\"Search\" onClick={ontClick} />\n\t\t\t{showResults ? <Results /> : null}\n\t\t\t<ScrollTop {...props}>\n\t\t\t\t<Fab color=\"primary\" size=\"large\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t</React.Fragment>\n\t);\n}\n\nconst Results = () => (\n\t<div id=\"results\" className=\"search-results\">\n\t\t<p>\n\t\t\t{[...new Array(60)]\n\t\t\t\t.map(\n\t\t\t\t\t() => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n\t\t\t\t)\n\t\t\t\t.join(\"\\n\")}\n\t\t</p>\n\t</div>\n);\n","import React, { useState, useEffect } from \"react\";\nimport {\n\tTableContainer,\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tmakeStyles,\n\tTypography,\n\tButton,\n\tPaper,\n} from \"@material-ui/core\";\nimport { trainLiveStation } from \"../requests\";\nimport getAuthorizationHeader from \"../apiKey\";\nimport axios from \"axios\";\n\nexport default function TrainLiveStation() {\n\tconst classes = useStyles();\n\tconst [rawData, setRawData] = useState([]);\n\tconst [outputData, setOutputData] = useState();\n\n\tconst fetchData = async (stationID) => {\n\t\tconst url = trainLiveStation(stationID);\n\t\tawait axios.get(url, { headers: getAuthorizationHeader }).then((res) => {\n\t\t\tconsole.log(\"get\");\n\t\t\tsetRawData(res.data.RailLiveBoard);\n\t\t});\n\t};\n\tconst stationClick = (station) => {\n\t\tswitch (station) {\n\t\t\tcase 4220:\n\t\t\t\treturn fetchData(station);\n\t\t\tcase 4320:\n\t\t\t\treturn fetchData(station);\n\t\t\tcase 4330:\n\t\t\t\treturn fetchData(station);\n\t\t\tcase 4340:\n\t\t\t\treturn fetchData(station);\n\t\t\tcase 4400:\n\t\t\t\treturn fetchData(station);\n\t\t\tdefault:\n\t\t\t\treturn alert(\"error\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (rawData.length !== 0) {\n\t\t\tsetOutputData(\n\t\t\t\trawData.map((item) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstationName: item.stationName,\n\t\t\t\t\t\tdirection: item.Direction,\n\t\t\t\t\t\ttrainType: item.TrainTypeName,\n\t\t\t\t\t\tarrivalTime: item.ScheduledArrivalTime,\n\t\t\t\t\t\tdepartTime: item.ScheduleDepartTime,\n\t\t\t\t\t\tdelayTime: item.DelayTime,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}, [setRawData]);\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<form className={classes.form}>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={(e) => stationClick(4220)}>\n\t\t\t\t\t台南\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={(e) => stationClick(4320)}>\n\t\t\t\t\t楠梓\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={(e) => stationClick(4330)}>\n\t\t\t\t\t新左營\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={(e) => stationClick(4400)}>\n\t\t\t\t\t橋頭\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t\t{outputData === undefined || rawData.length === 0 ? (\n\t\t\t\t<h3>No Data</h3>\n\t\t\t) : (\n\t\t\t\t<TableContainer component={Paper} className={classes.tableRoot}>\n\t\t\t\t\t<Table className={classes.table} aria-label=\"caption table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>車站</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>車種</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>到站</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>離站</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>誤點</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{outputData.map((item) => (\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.stationName}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.trainTypeName}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.arrivalTime}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.departTime}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.delayTime}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tjustifyItems: \"center\",\n\t\tflexDirection: \"column\",\n\t\tpaddingTop: 30,\n\t\tbackgroundColor: \"#dadbd3\",\n\t\theight: \"100vh\",\n\t\t\"& h3\": {\n\t\t\ttextAlign: \"center\",\n\t\t},\n\t},\n\tform: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-around\",\n\t\tmarginBottom: 20,\n\t},\n\ttableRoot: {\n\t\twidth: \"100%\",\n\t\tmarginBottom: 30,\n\t},\n\ttable: {\n\t\tmaxWidth: \"100%\",\n\t},\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./page/Home/Home.js\";\nimport BackToTop from \"./BackToTop.js\";\nimport TrainLiveStation from \"./Components/TrainLiveStation.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Bus from \"./page/Taichung/Bus.js\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/LiveStation\" component={TrainLiveStation} />\n\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t</Switch>\n\t\t\t{/* <BackToTop /> */}\n\t\t\t{/* <Bus /> */}\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}