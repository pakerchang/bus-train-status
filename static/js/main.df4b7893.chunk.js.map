{"version":3,"sources":["requests.js","apiKey.js","Components/TrainList.js","page/Home/Home.js","index.js"],"names":["trainAPI","originStation","destination","date","getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","Authorization","getHMAC","TrainList","useState","data","setData","useEffect","a","reqURL","axios","get","headers","then","res","console","log","TrainTimetables","catch","error","trainInfo","map","item","trainID","TrainInfo","TrainNo","trainType","TrainTypeName","Zh_tw","departure","StopTimes","DepartureTime","arrival","ArrivalTime","sort","first","second","localeCompare","className","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","replace","Home","trainOrigin","setTrainOrigin","trainDestination","setTrainDestination","busRoute","searchInfo","setSearchInfo","format","action","type","placeholder","value","onChange","e","target","onClick","preventDefault","startStation","stationInfo","find","includes","StationName","endStation","StationID","positionLat","StationPosition","PositionLat","positionLon","PositionLon","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df4b7893.chunk.js","sourcesContent":["const trainAPI = (originStation, destination, date) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v3/Rail/TRA/DailyTrainTimetable/OD/${originStation}/to/${destination}/${date}?$format=JSON`;\n};\n\nconst busAPI = (positionLat, positionLon) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/NearBy?$select=PlateNumb%2CStopID%2CStopName%2CRouteID%2C%20RouteName%2C%20SubRouteID%2C%20SubRouteName%2C%20Direction%2C%20EstimateTime%2C%20StopStatus%2C%20NextBusTime&$spatialFilter=nearby(${positionLat},${positionLon},500)&$format=JSON`;\n};\n\nconst taichungBus = (routeName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/DailyStopTimeTable/City/Taichung/${routeName}?$format=JSON`;\n};\n\nconst busOperator = (cityName) => {\n\treturn `https://ptx.transportdata.tw/MOTC/v2/Bus/Operator/City/${cityName}?$select=OperatorID%2COperatorName&$format=JSON`;\n};\n\nexport { trainAPI, busAPI, taichungBus, busOperator };\n","import jsSHA from \"jssha\";\n\nconst getAuthorizationHeader = function () {\n\tconst apiID = \"e076b2463e674e1e95cf5fd189f15b00\";\n\tconst apiKey = \"nL1Irz7_VltcPMn6JTT7VyW-yWI\";\n\n\tvar GMTString = new Date().toGMTString();\n\tvar ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n\tShaObj.setHMACKey(apiKey, \"TEXT\");\n\tShaObj.update(\"x-date: \" + GMTString);\n\tvar HMAC = ShaObj.getHMAC(\"B64\");\n\tvar Authorization =\n\t\t'hmac username=\"' +\n\t\tapiID +\n\t\t'\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n\t\tHMAC +\n\t\t'\"';\n\n\treturn {\n\t\tAuthorization: Authorization,\n\t\t\"X-Date\": GMTString,\n\t};\n};\n\nexport default getAuthorizationHeader;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport \"./TrainList.css\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { trainAPI } from \"../requests\";\nimport getAuthorizationHeader from \"../apiKey\";\n\nfunction TrainList({ originStation, destination, date }) {\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(async () => {\n\t\tif (originStation && destination && date !== \"\") {\n\t\t\tconst reqURL = trainAPI(\n\t\t\t\toriginStation,\n\t\t\t\tdestination,\n\t\t\t\tdate\n\t\t\t);\n\t\t\tawait axios\n\t\t\t\t.get(reqURL, { headers: getAuthorizationHeader() })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsetData(res.data.TrainTimetables);\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t}, [originStation, destination, date]);\n\n\tconst trainInfo = data.map((item) => ({\n\t\ttrainID: item.TrainInfo.TrainNo,\n\t\ttrainType: item.TrainInfo.TrainTypeName.Zh_tw,\n\t\tdeparture: item.StopTimes[0].DepartureTime,\n\t\tarrival: item.StopTimes[1].ArrivalTime,\n\t}));\n\t// 需要處理邏輯的資料\n\t// 行車順行逆行\n\t// 行駛時間計算\n\t// 修改車種名稱\n\n\ttrainInfo.sort((first, second) => {\n\t\treturn first.departure.localeCompare(second.departure);\n\t});\n\n\treturn (\n\t\t<div className=\"trainList\">\n\t\t\t<TableContainer>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell align=\"center\">車種車次</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\">車次</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\">出發時間</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\">抵達時間</TableCell>\n\t\t\t\t\t\t\t{/* <TableCell align=\"center\">行駛時間</TableCell> */}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{trainInfo.map((item) => (\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t{item.trainType.replace(\n\t\t\t\t\t\t\t\t\t\t/\\([^()]*\\)/g,\n\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t{item.trainID}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t{item.departure}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t\t{item.arrival}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>\n\t);\n}\n\nexport default TrainList;\n","import React, { useState } from \"react\";\nimport stationInfo from \"../../json/StationInfo.json\";\nimport { format } from \"date-fns\";\nimport \"./Home.css\";\nimport BusList from \"../../Components/BusList\";\nimport TrainList from \"../../Components/TrainList\";\n\nfunction Home() {\n\tconst [trainOrigin, setTrainOrigin] = useState(\"高雄\");\n\tconst [trainDestination, setTrainDestination] =\n\t\tuseState(\"台南\");\n\t// const [city, setCity] = useState(\"\");\n\tconst [busRoute, setBusRoute] = useState(\"藍幹線\");\n\tconst [searchInfo, setSearchInfo] = useState([]);\n\n\t// 抓取當地時間\n\tconst date = format(new Date(), \"yyyy-MM-dd\");\n\t\n\tconst searchButton = (e) => {\n\t\te.preventDefault();\n\t\t// 將車站名轉換成車站編號\n\t\tif (\n\t\t\ttrainOrigin &&\n\t\t\ttrainDestination &&\n\t\t\tbusRoute !== \"\"\n\t\t) {\n\t\t\tconst startStation = stationInfo.find((item) =>\n\t\t\t\ttrainOrigin.includes(item.StationName.Zh_tw)\n\t\t\t);\n\t\t\t// 將車站名轉換成車站編號\n\t\t\tconst endStation = stationInfo.find((item) =>\n\t\t\t\ttrainDestination.includes(item.StationName.Zh_tw)\n\t\t\t);\n\t\t\t// console.log(startStation, endStation);\n\t\t\t// setTrainOrigin(\"\");\n\t\t\t// setTrainDestination(\"\");\n\n\t\t\treturn setSearchInfo({\n\t\t\t\toriginStation: startStation.StationID,\n\t\t\t\tdestination: endStation.StationID,\n\t\t\t\tdate: date,\n\t\t\t\tpositionLat: endStation.StationPosition.PositionLat,\n\t\t\t\tpositionLon: endStation.StationPosition.PositionLon,\n\t\t\t\tbusRoute: busRoute,\n\t\t\t});\n\t\t} else {\n\t\t\talert(\"請輸入站別或路線\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<h1>火車及公車時刻表查詢</h1>\n\t\t\t<div className=\"home__search\">\n\t\t\t\t\n\t\t\t\t<form action=\"\" className=\"home__searchInfo\">\n\t\t\t\t\t<div className=\"home__searchTrain\">\n\t\t\t\t\t\t<h2>火車時刻表</h2>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"home__trainStation\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"出發站\"\n\t\t\t\t\t\t\tvalue={trainOrigin}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetTrainOrigin(e.target.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"home__trainStation\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"抵達站\"\n\t\t\t\t\t\t\tvalue={trainDestination}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetTrainDestination(e.target.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* 顯示火車時刻表單 */}\n\t\t\t\t\t\t<TrainList\n\t\t\t\t\t\t\toriginStation={searchInfo.originStation}\n\t\t\t\t\t\t\tdestination={searchInfo.destination}\n\t\t\t\t\t\t\tdate={searchInfo.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"searchBtn\"\n\t\t\t\t\t\tonClick={searchButton}>\n\t\t\t\t\t\t查詢\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{/* <div className=\"home__searchBus\">\n\t\t\t\t\t\t<h2>公車時刻表</h2> */}\n\t\t\t\t\t\t{/* select option */}\n\t\t\t\t\t\t{/* <input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"縣市\"\n\t\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"路線\"\n\t\t\t\t\t\t\tonChange={(e) => setBusRoute(e.target.value)}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t{/* 顯示公車時刻表單 */}\n\t\t\t\t\t\t{/* <BusList\n\t\t\t\t\t\t\t// city={searchInfo.city}\n\t\t\t\t\t\t\tpositionLat={searchInfo.positionLat}\n\t\t\t\t\t\t\tpositionLon={searchInfo.positionLon}\n\t\t\t\t\t\t\tbusRoute={searchInfo.busRoute}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t{/* </div> */}\n\t\t\t\t\t\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./page/Home/Home.js\";\nimport \"./index.css\";\nimport Bus from \"./page/Taichung/Bus.js\";\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Home />\n\t\t{/* <Bus /> */}\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}